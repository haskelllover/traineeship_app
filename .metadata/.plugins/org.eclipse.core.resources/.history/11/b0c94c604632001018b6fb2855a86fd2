package com.myy803.traineeship_app.controller;

import com.myy803.traineeship_app.model.Position;
import com.myy803.traineeship_app.model.Student;
import com.myy803.traineeship_app.model.Traineeship;
import com.myy803.traineeship_app.service.CommitteeService;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
@RequestMapping("/committee")
public class CommitteeController {

    private final CommitteeService committeeService;

    public CommitteeController(CommitteeService committeeService) {
        this.committeeService = committeeService;
    }

    // Existing routes

    @GetMapping("/dashboard")
    public String getDashboard() {
        return committeeService.getCommitteeDashboard();
    }

    @GetMapping("/applications")
    public String listApplications(Model model) {
        return committeeService.listTraineeshipApplication(model);
    }

    @GetMapping("/instructions")
    public String showInstructions(@RequestParam String studentUsername,
                                   @RequestParam String strategy,
                                   Model model) {
        return committeeService.instructions(studentUsername, strategy, model);
    }

    @PostMapping("/assign-position")
    public String assignPosition(@RequestParam Integer positionId,
                                 @RequestParam String studentUsername,
                                 Model model) {
        return committeeService.assignPosition(positionId, studentUsername, model);
    }

    @PostMapping("/assign-supervisor")
    public String assignSupervisor(@RequestParam Integer positionId,
                                   @RequestParam String strategy,
                                   Model model) {
        return committeeService.assignSupervisor(positionId, strategy, model);
    }

    @GetMapping("/assignees")
    public String listAssignees(Model model) {
        return committeeService.listAssigneeTraineeships(model);
    }

    @PostMapping("/complete-traineeship")
    public String completeTraineeship(@RequestParam Integer positionId,
                                      Model model) {
        return committeeService.completeAssignedTraineeships(positionId, model);
    }

    // ðŸ”¥ NEW ROUTES for UI

    // US16 - View students who applied
    @GetMapping("/students")
    public String viewAppliedStudents(Model model) {
        List<Student> students = committeeService.getAllAppliedStudents();
        model.addAttribute("students", students);
        return "students"; // students.html
    }

    // US17 - Match positions to a student
    @GetMapping("/students/{studentId}/match")
    public String matchPositions(@PathVariable("studentId") int studentId,
                                 @RequestParam(required = false) String interest,
                                 @RequestParam(required = false) String location,
                                 Model model) {
        Student student = committeeService.getStudentById(studentId);
        List<Position> positions = committeeService.findMatchingPositions(student, interest, location);
        model.addAttribute("student", student);
        model.addAttribute("positions", positions);
        return "match_positions"; // match_positions.html
    }

    // US18 - Assign confirmation screen (optional)
    @GetMapping("/assign/{studentId}/{positionId}")
    public String assignConfirmation(@PathVariable int studentId,
                                     @PathVariable int positionId,
                                     Model model) {
        committeeService.assignPosition(positionId, committeeService.getStudentById(studentId).getUsername(), model);
        return "assign_success"; // assign_success.html
    }

    // US19 - Assign supervising professor UI
    @GetMapping("/assign-professor")
    public String showAssignProfessorPage(@RequestParam("traineeshipId") int traineeshipId, Model model) {
        return committeeService.getAssignProfessorPage(traineeshipId, model);
    }

    // US20 - List in-progress traineeships
    @GetMapping("/in-progress")
    public String listInProgressTraineeships(Model model) {
        List<Traineeship> traineeships = committeeService.getInProgressTraineeships();
        model.addAttribute("traineeships", traineeships);
        return "in_progress"; // in_progress.html
    }

    // US21 - Monitor evaluation and mark final result
    @GetMapping("/monitor/{traineeshipId}")
    public String monitorEvaluation(@PathVariable int traineeshipId, Model model) {
        return committeeService.getEvaluationMonitorPage(traineeshipId, model);
    }

    @PostMapping("/complete/{traineeshipId}")
    public String completeEvaluation(@PathVariable int traineeshipId,
                                     @RequestParam("result") String result,
                                     Model model) {
        return committeeService.completeEvaluation(traineeshipId, result, model);
    }
}
