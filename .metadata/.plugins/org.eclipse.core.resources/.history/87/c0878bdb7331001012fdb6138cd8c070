package com.myy803.traineeship_app.domainmodel;

import java.util.ArrayList;
import java.util.List;

import jakarta.persistence.*;

@Entity
@Table(name = "students")
public class Student {
	
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;
    
    @Column(name = "username", unique = true)
	private String username;   
    
    @Column(name = "student_name")
	private String studentName;
    
    @Column(name = "am", unique = true)
	private String AM;
    
    @Column(name = "avg_grade")
	private double avgGrade;
    
    @Column(name = "preferred_location")
	private String preferredLocation;
    
    @Transient
    @Column(name = "interest")
    private String interests;
    
    @Transient
    @Column(name = "skill")
    private String skills;
    
    @Column(name = "looking_for_traineeship")
	private Boolean lookingForTraineeship = false;
	
	@OneToOne(mappedBy = "student")
	private TraineeshipPosition assignedTraineeship;
	
	@Column(name = "year_of_studies")
	private Integer yearOfStudies;

	@Column(name = "department")
	private String department;
	
	
	//getters
	
    public Integer getId() { 
    	return id; 
    }

	public String getUsername() {
		return username;
	}
	
	public String getStudentName() {
		return studentName;
	}
	
	public String getAM() {
		return AM;
	}
	
	public double getAvgGrade() {
		return avgGrade;
	}
	
	public String getPreferredLocation() {
		return preferredLocation;
	}
	
	public String getInterests() {
		return interests;
	}

	public String getSkills() {
		return skills;
	}

	public Boolean isLookingForTraineeship() {
		return lookingForTraineeship;
	}
	
	public TraineeshipPosition getAssignedTraineeship() {
		return assignedTraineeship;
	}
	
	public Integer getYearOfStudies() {
	    return yearOfStudies;
	}

	public String getDepartment() {
	    return department;
	}
	
	//setters
	public void setUsername(String username) {
		this.username = username;
	}
	
	public void setStudentName(String studentName) {
		this.studentName = studentName;
	}
	
	public void setAM(String AM) {
		this.AM = AM;
	}
	
	public void setAvgGrade(double avgGrade) {
		this.avgGrade = avgGrade;
	}
	
	public void setPreferredLocation(String preferredLocation) {
		this.preferredLocation = preferredLocation;
	}
	
	// In Student.java
	public void setInterestsFromString(String interestsStr) {
	    this.interests.clear();
	    if (interestsStr != null && !interestsStr.trim().isEmpty()) {
	        Arrays.stream(interestsStr.split("\\s*,\\s*"))
	            .filter(interest -> !interest.trim().isEmpty())
	            .forEach(this::addInterest);
	    }
	}

	public void setSkillsFromString(String skillsStr) {
	    this.skills.clear();
	    if (skillsStr != null && !skillsStr.trim().isEmpty()) {
	        Arrays.stream(skillsStr.split("\\s*,\\s*"))
	            .filter(skill -> !skill.trim().isEmpty())
	            .forEach(this::addSkill);
	    }
	}
	
	public void setAssignedTraineeship(TraineeshipPosition assignedTraineeship) {
		this.assignedTraineeship = assignedTraineeship;
	}

	public void setLookingForTraineeship(Boolean lookingForTraineeship) {
		this.lookingForTraineeship = lookingForTraineeship;
	}
	
	public void setSupervisedPositions(TraineeshipPosition supervisedPositions) {
		this.assignedTraineeship = supervisedPositions;
	}
	
	public void setYearOfStudies(Integer yearOfStudies) {
	    this.yearOfStudies = yearOfStudies;
	}
	
	public void setDepartment(String department) {
	    this.department = department;
	}
	
    // Helper methods
    public void addInterest(String interest) {
        this.interests.add(interest);
    }
    
    public void addSkill(String skill) {
        this.skills.add(skill);
    }
}
